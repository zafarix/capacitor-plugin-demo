{"version":3,"sources":["webpack:///./src/app/accessibility/accessibility.module.ts","webpack:///./src/app/accessibility/accessibility.page.html","webpack:///./src/app/accessibility/accessibility.page.scss","webpack:///./src/app/accessibility/accessibility.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEY;AAEzD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qEAAiB;KAC7B;CACF,CAAC;AAWF;IAAA;IAAsC,CAAC;IAA1B,uBAAuB;QATnC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,qEAAiB,CAAC;SAClC,CAAC;OACW,uBAAuB,CAAG;IAAD,8BAAC;CAAA;AAAH;;;;;;;;;;;;ACzBpC,ssCAAssC,sBAAsB,ua;;;;;;;;;;;ACA5tC,+DAA+D,2J;;;;;;;;;;;;;;;;;;ACAb;AACG;AAOrD;IAIE;IAAgB,CAAC;IAEjB,oCAAQ,GAAR;QACE,IAAI,CAAC,qBAAqB,EAAE,CAAC;IAC/B,CAAC;IAEK,iDAAqB,GAA3B;;;;;;6BACM,yDAAS,CAAC,iBAAiB,CAAC,eAAe,CAAC,EAA5C,wBAA4C;wBAC7B,qBAAM,uDAAO,CAAC,aAAa,CAAC,qBAAqB,EAAE;;wBAA9D,QAAQ,GAAG,SAAmD;wBACpE,IAAI,CAAC,kBAAkB,GAAG,QAAQ,CAAC,KAAK,CAAC;;;wBAGzC,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;;;;;;KAEnC;IAEK,iCAAK,GAAX;;;gBACE,IAAI,yDAAS,CAAC,iBAAiB,CAAC,eAAe,CAAC,EAAE;oBAChD,uDAAO,CAAC,aAAa,CAAC,KAAK,CAAC,EAAC,KAAK,EAAE,IAAI,CAAC,WAAW,EAAC,CAAC,CAAC;iBACxD;qBACI;oBACH,KAAK,CAAC,wFAAwF,CAAC,CAAC;iBACjG;;;;KACF;IA3BU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,iHAAwC;;SAEzC,CAAC;;OACW,iBAAiB,CA4B7B;IAAD,wBAAC;CAAA;AA5B6B","file":"accessibility-accessibility-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { AccessibilityPage } from './accessibility.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AccessibilityPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [AccessibilityPage]\r\n})\r\nexport class AccessibilityPageModule {}\r\n","module.exports = \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n      <ion-buttons slot=\\\"start\\\">\\r\\n        <ion-menu-button></ion-menu-button>\\r\\n      </ion-buttons>\\r\\n      <ion-title>\\r\\n        Accessibility\\r\\n      </ion-title>\\r\\n    </ion-toolbar>\\r\\n  </ion-header>\\r\\n  \\r\\n  <ion-content>\\r\\n    <ion-grid>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-label>\\r\\n              The Accessibility API makes it easy to know when a user has a screen reader enabled, as well as programmatically \\r\\n              speaking labels through the connected screen reader.\\r\\n          </ion-label>\\r\\n          <ion-label color=\\\"danger\\\">Note:</ion-label>\\r\\n        <ion-label> Currently no web implementation.</ion-label>\\r\\n        </ion-col>\\r\\n        <ion-col>\\r\\n          <ion-button href=\\\"https://capacitor.ionicframework.com/docs/apis/accessibility\\\">\\r\\n            <ion-icon slot=\\\"start\\\" name=\\\"document\\\"></ion-icon>\\r\\n            API Details\\r\\n          </ion-button>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n          \\r\\n  <ion-item-divider></ion-item-divider>\\r\\n\\r\\n  <ion-item>\\r\\n      <ion-label>\\r\\n        Is screenreader enabled? <ion-note color=\\\"secondary\\\">{{ isVoiceOverEnabled }}</ion-note>\\r\\n      </ion-label>\\r\\n    </ion-item>\\r\\n    <ion-item>  \\r\\n      <ion-label>Enter some text to speak:</ion-label>\\r\\n      <ion-input placeholder=\\\"What's on your mind?\\\" [(ngModel)]=\\\"textToSpeak\\\"></ion-input>    \\r\\n      <ion-button (click)=\\\"speak()\\\">\\r\\n        <ion-icon slot=\\\"start\\\" name=\\\"document\\\"></ion-icon>\\r\\n        Speak!\\r\\n      </ion-button>\\r\\n    </ion-item>\\r\\n</ion-content>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY2Vzc2liaWxpdHkvYWNjZXNzaWJpbGl0eS5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Capacitor, Plugins } from '@capacitor/core';\r\n\r\n@Component({\r\n  selector: 'app-accessibility',\r\n  templateUrl: './accessibility.page.html',\r\n  styleUrls: ['./accessibility.page.scss'],\r\n})\r\nexport class AccessibilityPage implements OnInit {\r\n  public isVoiceOverEnabled: boolean;\r\n  public textToSpeak: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.checkVoiceOverEnabled();\r\n  }\r\n\r\n  async checkVoiceOverEnabled() {\r\n    if (Capacitor.isPluginAvailable('Accessibility')) {\r\n      const voResult = await Plugins.Accessibility.isScreenReaderEnabled();\r\n      this.isVoiceOverEnabled = voResult.value;\r\n    }\r\n    else {\r\n      this.isVoiceOverEnabled = false;\r\n    }\r\n  }\r\n\r\n  async speak() {\r\n    if (Capacitor.isPluginAvailable('Accessibility')) {\r\n      Plugins.Accessibility.speak({value: this.textToSpeak});\r\n    }\r\n    else {\r\n      alert(\"I'm afraid I can't do that, Dave... because this API isn't available on this platform.\");\r\n    }\r\n  }\r\n}"],"sourceRoot":""}