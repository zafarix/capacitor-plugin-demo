{"version":3,"sources":["webpack:///./src/app/network/network.module.ts","webpack:///./src/app/network/network.page.html","webpack:///./src/app/network/network.page.scss","webpack:///./src/app/network/network.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEA;AAE7C,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,yDAAW;KACvB;CACF,CAAC;AAWF;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QAT7B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,yDAAW,CAAC;SAC5B,CAAC;OACW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB9B,++BAA++B,sEAAsE,kCAAkC,iDAAiD,of;;;;;;;;;;;ACAxoC,+DAA+D,2I;;;;;;;;;;;;;;;;;;ACAb;AAC6B;AAEvE,6EAAO,CAAa;AAO5B;IAAA;IAiBA,CAAC;IAZO,8BAAQ,GAAd;;;;;;;wBACE,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC,WAAW,CAAC,qBAAqB,EAAE,UAAC,MAAM;4BACvE,KAAI,CAAC,aAAa,GAAG,MAAM,CAAC;wBAC9B,CAAC,CAAC,CAAC;wBAEH,SAAI;wBAAiB,qBAAM,OAAO,CAAC,SAAS,EAAE;;wBAA9C,GAAK,aAAa,GAAG,SAAyB,CAAC;;;;;KAChD;IAED,iCAAW,GAAX;QACE,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC;IAChC,CAAC;IAfU,WAAW;QALvB,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,+FAAkC;;SAEnC,CAAC;OACW,WAAW,CAiBvB;IAAD,kBAAC;CAAA;AAjBuB","file":"network-network-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { NetworkPage } from './network.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NetworkPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [NetworkPage]\r\n})\r\nexport class NetworkPageModule {}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar [color]=\\\"networkStatus && networkStatus.connected ? 'primary' : 'danger'\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Network</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding>\\r\\n  <ion-grid>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-label>\\r\\n              The Network API provides events for monitoring network status changes, \\r\\n              along with querying the current state of the network.\\r\\n          </ion-label>\\r\\n        </ion-col>\\r\\n        <ion-col>\\r\\n          <ion-button href=\\\"https://capacitor.ionicframework.com/docs/apis/network\\\">\\r\\n            <ion-icon slot=\\\"start\\\" name=\\\"document\\\"></ion-icon>\\r\\n            API Details\\r\\n          </ion-button>\\r\\n        </ion-col>\\r\\n        </ion-row>\\r\\n      </ion-grid>\\r\\n    \\r\\n  <ion-item-divider></ion-item-divider>\\r\\n\\r\\n  <h1>Connection status: {{ networkStatus && networkStatus.connected ? \\\"Online\\\" : \\\"Offline\\\"}}</h1>\\r\\n  <h2>Connection type: {{ networkStatus && networkStatus.connectionType }}</h2>\\r\\n\\r\\n  <ion-item-divider></ion-item-divider>\\r\\n  <p>\\r\\n    The Network toolbar above changes based on the device's network status. To see this yourself:\\r\\n  </p>\\r\\n\\r\\n  <h2>On Desktop:</h2>\\r\\n  <p>Open the brower's developer tools, then on the Network tab, toggle the \\\"Offline\\\" checkbox:</p>\\r\\n  <img src=\\\"assets/api-network-offline.png\\\"  />\\r\\n\\r\\n  <h2>On Mobile Device:</h2>\\r\\n  <p>Disable Wifi or toggle airplane mode then navigate back to this app.</p>\\r\\n</ion-content>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25ldHdvcmsvbmV0d29yay5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Plugins, NetworkStatus, PluginListenerHandle } from '@capacitor/core';\r\n\r\nconst { Network } = Plugins;\r\n\r\n@Component({\r\n  selector: 'app-network',\r\n  templateUrl: './network.page.html',\r\n  styleUrls: ['./network.page.scss'],\r\n})\r\nexport class NetworkPage implements OnInit {\r\n\r\n  networkStatus: NetworkStatus;\r\n  networkListener: PluginListenerHandle;\r\n\r\n  async ngOnInit() {\r\n    this.networkListener = Network.addListener('networkStatusChange', (status) => {\r\n      this.networkStatus = status;\r\n    });\r\n\r\n    this.networkStatus = await Network.getStatus();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.networkListener.remove();\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}