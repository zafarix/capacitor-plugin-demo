{"version":3,"sources":["webpack:///./src/app/browser/browser.module.ts","webpack:///./src/app/browser/browser.page.html","webpack:///./src/app/browser/browser.page.scss","webpack:///./src/app/browser/browser.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEA;AAE7C,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,yDAAW;KACvB;CACF,CAAC;AAWF;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QAT7B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,yDAAW,CAAC;SAC5B,CAAC;OACW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB9B,mmC;;;;;;;;;;;ACAA,+DAA+D,2I;;;;;;;;;;;;;;;;;ACAb;AAOlD;IAEE;IAAgB,CAAC;IAEjB,8BAAQ,GAAR;IACA,CAAC;IALU,WAAW;QALvB,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,+FAAkC;;SAEnC,CAAC;;OACW,WAAW,CAOvB;IAAD,kBAAC;CAAA;AAPuB","file":"browser-browser-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { BrowserPage } from './browser.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: BrowserPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [BrowserPage]\r\n})\r\nexport class BrowserPageModule {}\r\n","module.exports = \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n      <ion-buttons slot=\\\"start\\\">\\r\\n        <ion-menu-button></ion-menu-button>\\r\\n      </ion-buttons>\\r\\n      <ion-title>Browser</ion-title>\\r\\n    </ion-toolbar>\\r\\n  </ion-header>\\r\\n  \\r\\n  <ion-content>\\r\\n    <ion-grid>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-label>\\r\\n              The Browser API makes it easy to open an in-app browser session \\r\\n              to show external web content, handle authentication flows, and more. \\r\\n              On iOS this uses SFSafariViewController and is compliant with \\r\\n              leading oAuth service in-app-browser requirements.\\r\\n          </ion-label>\\r\\n        </ion-col>\\r\\n        <ion-col>\\r\\n          <ion-button href=\\\"https://capacitor.ionicframework.com/docs/apis/browser\\\">\\r\\n            <ion-icon slot=\\\"start\\\" name=\\\"document\\\"></ion-icon>\\r\\n            API Details\\r\\n          </ion-button>\\r\\n        </ion-col>\\r\\n        </ion-row>\\r\\n      </ion-grid>\\r\\n    \\r\\n    <ion-item-divider></ion-item-divider>\\r\\n\\r\\n    Implementation pending.\\r\\n  </ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Jyb3dzZXIvYnJvd3Nlci5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-browser',\r\n  templateUrl: './browser.page.html',\r\n  styleUrls: ['./browser.page.scss'],\r\n})\r\nexport class BrowserPage implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}